version: '3.8'

services:
  db:
    image: postgres:14-alpine
    container_name: aidungeonprompts_db
    restart: always
    volumes:
      - /media/main/AIPromptDossier/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=aidungeonprompts
      - POSTGRES_USER=aidungeonprompts_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - db_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aidungeonprompts_user -d aidungeonprompts"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    image: aidungeonprompts_app
    container_name: aidungeonprompts_app
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5001:80"
    volumes:
      - /media/main/AIPromptDossier/backups:/AIPromptDossier/backups
    environment:
      - ConnectionStrings__AIDungeonPrompt=Host=db;Port=5432;Database=aidungeonprompts;Username=aidungeonprompts_user;Password=${DB_PASSWORD}
      - Serilog__WriteTo__1__Args__connectionString=Host=db;Port=5432;Database=aidungeonprompts;Username=aidungeonprompts_user;Password=${DB_PASSWORD}
      - ASPNETCORE_ENVIRONMENT=Production
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - db_network
    depends_on:
      db:
        condition: service_healthy

networks:
  db_network:
    driver: bridge
    name: aidungeonprompts_network
